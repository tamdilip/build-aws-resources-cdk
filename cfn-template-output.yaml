Resources:
  MyFunctionServiceRole3C357FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BuildAwsResourcesCdkStack/MyFunction/ServiceRole/Resource
  MyFunction3BAA72D1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: exports.handler = function(event, ctx, cb) { return cb(null, "hi"); }
      Role:
        Fn::GetAtt:
          - MyFunctionServiceRole3C357FF2
          - Arn
      Handler: index.handler
      Runtime: nodejs10.x
    DependsOn:
      - MyFunctionServiceRole3C357FF2
    Metadata:
      aws:cdk:path: BuildAwsResourcesCdkStack/MyFunction/Resource
  MyProjectRole9BBE5233:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BuildAwsResourcesCdkStack/MyProject/Role/Resource
  MyProjectRoleDefaultPolicyB19B7C29:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: MyProject39F7B0AE
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: MyProject39F7B0AE
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: MyProject39F7B0AE
                  - -*
        Version: "2012-10-17"
      PolicyName: MyProjectRoleDefaultPolicyB19B7C29
      Roles:
        - Ref: MyProjectRole9BBE5233
    Metadata:
      aws:cdk:path: BuildAwsResourcesCdkStack/MyProject/Role/DefaultPolicy/Resource
  MyProject39F7B0AE:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - MyProjectRole9BBE5233
          - Arn
      Source:
        BuildSpec: >-
          {
            "version": "0.2",
            "phases": {
              "build": {
                "commands": [
                  "echo \"Hello, CodeBuild!\""
                ]
              }
            },
            "reports": {
              "myReport": {
                "files": "**/*",
                "base-directory": "build/test-results"
              }
            }
          }
        Type: NO_SOURCE
      EncryptionKey: alias/aws/s3
    Metadata:
      aws:cdk:path: BuildAwsResourcesCdkStack/MyProject/Resource
  MyProjectBuildStateChange353E292F:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codebuild
        detail:
          project-name:
            - Ref: MyProject39F7B0AE
        detail-type:
          - CodeBuild Build State Change
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - MyFunction3BAA72D1
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: BuildAwsResourcesCdkStack/MyProject/BuildStateChange/Resource
  MyProjectBuildStateChangeAllowEventRuleBuildAwsResourcesCdkStackMyProjectBuildStateChange1E81231632DD0209:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyFunction3BAA72D1
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - MyProjectBuildStateChange353E292F
          - Arn
    Metadata:
      aws:cdk:path: BuildAwsResourcesCdkStack/MyProject/BuildStateChange/AllowEventRuleBuildAwsResourcesCdkStackMyProjectBuildStateChange1E812316
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.89.0,jsii-runtime=node.js/v12.0.0
    Metadata:
      aws:cdk:path: BuildAwsResourcesCdkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

